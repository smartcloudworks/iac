AWSTemplateFormatVersion: "2010-09-09"
Description: Build VPC, Internet Gateway
Parameters:

  EnvironmentName:
    Description: environment name to prepend to resource names
    Type: String
    Default: scw
    AllowedPattern: '^[\w\+-=\._:/@]{0,50}$'
    ConstraintDescription: must be between 0-50 chars, letters, numbers or +-=._:/@
  
  VpcCidr:
    Description: IP Range for entire VPC
    Type: String
    Default: 10.21.0.0/16
    AllowedPattern: '^(\d{1,3}\.){3}\d{1,3}/\d{2}$'
    ConstraintDescription: must be a valid private CIDR IP x.x.x.x/16-28

  PublicSubnet01CIDR:
    Description: IP Range for Public Subnet 01
    Type: String
    Default: 10.21.11.0/24
    AllowedPattern: '^(\d{1,3}\.){3}\d{1,3}/\d{2}$'
    ConstraintDescription: must be a valid private CIDR IP x.x.x.x/16-28

  PublicSubnet02CIDR:
    Description: IP Range for Public Subnet 02
    Type: String
    Default: 10.21.21.0/24
    AllowedPattern: '^(\d{1,3}\.){3}\d{1,3}/\d{2}$'
    ConstraintDescription: must be a valid private CIDR IP x.x.x.x/16-28

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet01CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  PublicSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet02CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet01

  PublicSubnet02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet02

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [ ",", [ !Ref PublicSubnet01, !Ref PublicSubnet02 ]]

  PublicSubnet01:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref PublicSubnet01

  PublicSubnet02:
    Description: A reference to the public subnet in the 2nd Availability Zone
    Value: !Ref PublicSubnet02
  